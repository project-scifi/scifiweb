@import 'font-awesome/font-awesome';
@import 'bulma/sass/utilities/initial-variables';

$blue: hsl(225, 80%, 45%);
$green: hsl(150, 90%, 30%);
$orange: hsl(12, 100%, 45%);
$purple: hsl(280, 70%, 30%);

@import 'bulma/sass/utilities/functions';
@import 'bulma/sass/utilities/derived-variables';

$primary: $purple;
$secondary: $orange;
$tertiary: $blue;

$primary-invert: $purple-invert;
$secondary-invert: $orange-invert;
$tertiary-invert: $blue-invert;

$colors: map-merge($colors, (
    "primary": ($primary, $primary-invert),
    "secondary": ($secondary, $secondary-invert),
    "tertiary": ($tertiary, $tertiary-invert),
));

$title-size: $size-2;

@import 'bulma/bulma';

html {
    scroll-behavior: smooth;
}

html,
body {
    width: 100%;
    height: 100%;
}

svg {
    width: 100%;
    max-height: 100%;
}

hr {
    box-sizing: border-box;
    margin: 0.75em auto;
}

.is-uppercase {
    text-transform: uppercase;
}

.collapse {
    overflow: hidden;
    max-height: 0;
    transition: max-height 0.4s ease-out;
}

.toggle-collapse:checked + .collapse {
    // Just needs to be sufficiently large
    max-height: 2000px;
    transition: max-height 0.4s ease-in;
}

.has-border {
    border-width: 0.5em;
    border-color: white;
    border-style: solid;

    @each $name, $pair in $colors {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);

        &.is-#{$name} {
            border-color: $color;
        }
    }
}

.image.is-circle {
    border-radius: 290486px;
}

.container {
    max-width: 100%;
}

.title {
    font-weight: $weight-bold;
}

.button {
    height: auto;
    width: auto;
    padding: 0.5em 1.5em;
    border-radius: 290486px;
    text-transform: uppercase;
    font-weight: $weight-bold;

    &.is-small {
        border-radius: 290486px;
    }
}

.hero {
    &.is-fullheight > .hero-body {
        padding-top: 0.5em;
        padding-bottom: 1.5em;

        @include tablet {
            padding-top: 0;
            padding-bottom: 0;
        }
    }


    // Bulma assumes that an "a" inside a hero is a tab or such.
    // We are sort of abusing heros, so we must fix this.
    p > a {
        text-decoration: underline;

        &:hover,
        &:focus {
            color: $grey-lighter !important;
        }
    }

    @each $name, $pair in $colors {
        $color-invert: nth($pair, 2);

        &.is-#{$name} .content {
            color: $color-invert;
        }
    }
}

@import 'home';
